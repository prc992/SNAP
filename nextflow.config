// Centralized configuration for shared parameters
params {
    genome = 'hg19'
    allowedGenomes = ['hg19', 'hg38']
    
    hg19GenomeDownload  = 'https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz'
    hg19GeneAnotationDownload = 'https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_19/gencode.v19.annotation.gtf.gz'
    hg19DACListDownload = 'https://www.encodeproject.org/files/ENCFF001TDO/@@download/ENCFF001TDO.bed.gz'
    hg19SNP ='https://github.com/prc992/SNAP/blob/87fd6ec0e1fa38847200d0da2169015ac5db3feb/ref_files/SNPs/SNPs.1e5.hg19.txt'
    

    hg38GenomeDownload = 'https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz'
    hg38GeneAnotationDownload = 'https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_47/gencode.v47.annotation.gtf.gz'
    hg38DACListDownload = 'https://www.encodeproject.org/files/ENCFF356LFX/@@download/ENCFF356LFX.bed.gz'
    hg38SNP ='https://github.com/prc992/SNAP/blob/87fd6ec0e1fa38847200d0da2169015ac5db3feb/ref_files/SNPs/SNPs.1e5.hg38.txt'

    states_ref = "${projectDir}/ref_files/states"
    enrichment_states_ref = "${projectDir}/ref_files/enrichment_states"
    genes_pileup_report = "${projectDir}/ref_files/pileup_report/test_housekeeping.bed"
    multiqc_config = "${projectDir}/ref_files/multiqc/multiqc_config.yml"
    multiqc_frag_len_header = "${projectDir}/ref_files/multiqc/frag_len_header.txt"
    multiqc_tot_frag_peaks_header = "${projectDir}/ref_files/multiqc/frags_peaks_header.txt"
    multiqc_enrichment_header = "${projectDir}/ref_files/multiqc/enrichment_header.txt"


    pathEnrichmentScript = "${projectDir}/auxiliar_programs/enrichment.sh"
    pathRfrag_plotFragDist = "${projectDir}/auxiliar_programs/frag_plotFragDist.R"
    pathRComparison = "${projectDir}/auxiliar_programs/pileups_comparison.R"
    pathRPileups = "${projectDir}/auxiliar_programs/read_pileups.R"
    pathSNPFootprint = "${projectDir}/auxiliar_programs/SNP_Footprint_Clustering.R"
    pathReportFragHist = "${projectDir}/auxiliar_programs/report_calc_frag_hist.py"
    pathReportFragPeaks = "${projectDir}/auxiliar_programs/report_frags_and_peaks.py"
    pathReportEnrichment = "${projectDir}/auxiliar_programs/report_enrichment.py"
    pathMergeReportEnrichment = "${projectDir}/auxiliar_programs/merge_enrichment_reports.py"
}

// Profile-specific settings
profiles {

    singularity_lsf_high {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "$PWD/Sing-Images/"
        process.executor = 'slurm'

        includeConfig 'conf/base_lsf_high.config'
    }

    singularity_slurm_high {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "/n/app/singularity/containers/pac936/"
        singularity_folder = "/n/app/singularity/containers/pac936/"
        process.executor = 'slurm'

        includeConfig 'conf/base_o2_high.config'
    }

    singularity_slurm_low {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "/n/app/singularity/containers/pac936/"
        singularity_folder = "/n/app/singularity/containers/pac936/"
        process.executor = 'slurm'

        includeConfig 'conf/base_o2_low.config'
    }

    local_mac {
        docker.enabled = true
        docker.runOptions = '--platform linux/amd64'

        includeConfig 'conf/base_local.config'
    }

    aws {
        docker.enabled = true
        docker.userEmulation = true
        docker.runOptions = '--platform linux/amd64'

        includeConfig 'conf/base_aws.config'

        // Override S3-specific parameters
        params {
            align_ref = 's3://dfci-cfchipseq-tower/ref_files/hg19/'
            files_ref_genome = 's3://dfci-cfchipseq-tower/ref_files/hg19/hg19*.*'
            gtf_ref = 's3://dfci-cfchipseq-tower/ref_files/hg19/gencode.v19.annotation.gtf'
            DAC_Exclusion = 's3://dfci-cfchipseq-tower/ref_files/hg19/DAC_Exclusion.bed'
        }
    }
}